name: AWS Lambda CI/CD

on:
  push:
    branches:
      - 'main'
      - 'release/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run tests
        run:
          docker run --rm -t -v ${PWD}:/app --env-file configs/.env.development -w /app --network=host python:3.8-alpine sh -c 'pip install --upgrade pip -r requirements.txt && python3 -m unittest discover test "*Test.py"'

  deploy-staging:
    if: contains(github.ref, 'refs/heads/release')
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install Node.js dependencies
        run: npm install

      - name: Configure staging AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: sa-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}

      - name: Serverless deploy
        run: npm run-script deploy-staging

  deploy-production:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install Node.js dependencies
        run: npm install

      - name: Configure production AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: sa-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Serverless deploy
        run: npm run-script deploy-production